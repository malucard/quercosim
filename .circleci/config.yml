# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  export:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get -y install wget zip unzip jq
      - run:
          name: Download Godot
          command: |
            bash send_webhook.sh
            sudo update-ca-certificates
            wget -q --no-check-certificate https://downloads.tuxfamily.org/godotengine/3.4.2/Godot_v3.4.2-stable_linux_headless.64.zip
            unzip Godot_v3.4.2-stable_linux_headless.64.zip
            mv Godot_v3.4.2-stable_linux_headless.64 godot
            chmod +x godot
            wget -q --no-check-certificate https://downloads.tuxfamily.org/godotengine/3.4.2/Godot_v3.4.2-stable_export_templates.tpz
            mkdir -p ~/.local/share/godot/templates
            unzip Godot_v3.4.2-stable_export_templates.tpz -d ~/.local/share/godot/templates
            mv ~/.local/share/godot/templates/templates ~/.local/share/godot/templates/3.4.2.stable
      - run:
          name: Get Butler
          command: |
            wget -q --no-check-certificate -O butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
            unzip butler.zip
            chmod +x butler
      - run:
          name: Export Web
          command: |
            mkdir -p /tmp/web
            ./godot --export "HTML5" "/tmp/web/index.html"
            ./godot --export-pack "HTML5 bg" "/tmp/web/bg.pck"
            ./godot --export-pack "HTML5 sounds" "/tmp/web/sounds.pck"
            ./godot --export-pack "HTML5 sprites" "/tmp/web/sprites.pck"
            ./godot --export-pack "HTML5 videos" "/tmp/web/videos.pck"
      - run:
          name: Upload Web
          command: |
            if [[ $(git log -1 --oneline) == *"[RELEASE]"* ]]; then ./butler push /tmp/web malucart/qads:web --userversion-file version.txt; fi
      - run:
          name: Export Windows
          command: ./godot --export "Windows Desktop" "/tmp/quercos.exe"
      - run:
          name: Upload Windows
          command: |
            if [[ $(git log -1 --oneline) == *"[RELEASE]"* ]]; then ./butler push /tmp/quercos.exe malucart/qads:windows --userversion-file version.txt; fi
      - run:
          name: Export Linux
          command: ./godot --export "Linux/X11" "/tmp/quercos.x86_64"
      - run:
          name: Upload Linux
          command: |
            if [[ $(git log -1 --oneline) == *"[RELEASE]"* ]]; then ./butler push /tmp/quercos.x86_64 malucart/qads:linux --userversion-file version.txt; fi
      - run:
          name: Export macOS
          command: ./godot --export "Mac OSX" "/tmp/quercos.zip"
      - run:
          name: Upload macOS
          command: |
            if [[ $(git log -1 --oneline) == *"[RELEASE]"* ]]; then ./butler push /tmp/quercos.zip malucart/qads:mac --userversion-file version.txt; fi
      - run:
          name: Export Android
          command: |
            wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
            unzip commandlinetools-linux-7583922_latest.zip
            rm -f commandlinetools-linux-7583922_latest.zip
            sudo mkdir -p /usr/lib/android-sdk/cmdline-tools
            sudo mv cmdline-tools /usr/lib/android-sdk/cmdline-tools/latest
            export ANDROID_HOME=/usr/lib/android-sdk
            export PATH=$PATH:$ANDROID_HOME/tools/bin
            export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
            export PATH=$PATH:$ANDROID_HOME/platform-tools
            sudo sdkmanager --install platforms\;android-30
            sudo sdkmanager --install build-tools\;30.0.3
            sed -i 's/android_sdk_path = ""/android_sdk_path = "\/usr\/lib\/android-sdk"/g' ~/.config/godot/editor_settings-3.tres
            ./godot --export "Android" "/tmp/quercos.apk"
      - run:
          name: Upload Android
          command: |
            if [[ $(git log -1 --oneline) == *"[RELEASE]"* ]]; then ./butler push /tmp/quercos.apk malucart/qads:android --userversion-file version.txt; fi
      - store_artifacts:
          path: /tmp/quercos.x86_64
          destination: quercos-linux
      - store_artifacts:
          path: /tmp/quercos.exe
          destination: quercos-windows
      - store_artifacts:
          path: /tmp/quercos.zip
          destination: quercos-mac
      - store_artifacts:
          path: /tmp/quercos.apk
          destination: quercos-android

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  export-workflow:
    jobs:
      - export:
          context:
            - itch
